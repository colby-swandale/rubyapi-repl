name: AWS SAM

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - '**.md'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      env-name: ${{ steps.env-name.outputs.environment }}
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Configure variables
        shell: bash
        id: vars
        env:
          REPO: ${{ github.repository }}
          HASH: ${{ github.sha }}
          REF: ${{ github.ref }}
        run: |
          # Set variables
          BRANCH=${REF#refs/heads/}
          REPOSITORY=`echo $REPO | tr "/" "-"`
          ENVIRONMENT=$BRANCH-$REPOSITORY-${{ secrets.AWS_REGION }}
          # In this step we are setting variables and persistenting them
          # into the environment so that they can be utilized in other steps
          echo "::set-output name=branch::$BRANCH"
          echo "::set-output name=repository::$REPOSITORY"
          echo "::set-output name=environment::$ENVIRONMENT"
          # Output variables to ensure their values are set correctly when ran
          echo "The region is ${{ secrets.AWS_REGION }}"
          echo "The repository is $REPOSITORY"
          echo "The environment is $ENVIRONMENT"
          echo "The branch is $BRANCH"
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install python3.8 jq -y
      - name: SAM Validate
        run: |
          sam validate
      - name: Run Tests
        run: |
          bundle exec rake test
      - name: SAM Build
        run: |
          sam build
      - uses: actions/upload-artifact@v2
        with:
          name: sam-build
          retention-days: 1
          path: .aws-sam/
    
  deployStaging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Staging
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/download-artifact@v2
        with:
          name: sam-build
      - name: SAM Deploy
        run: |
          sam deploy --region ${{ secrets.AWS_REGION }} --stack-name ${{ secrets.AWS_STACK_NAME }} --capabilities CAPABILITY_NAMED_IAM --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --role-arn ${{ secrets.AWS_ROLE_ARN }} --s3-prefix ${{ secrets.AWS_S3_PREFIX }} --no-confirm-changeset --tags "environment=staging"

  deployProduction:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: Production
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS credentials
        id: creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: actions/download-artifact@v2
        with:
          name: sam-build
      - name: SAM Deploy
        run: |
          sam deploy --region ${{ secrets.AWS_REGION }} --stack-name ${{ secrets.AWS_STACK_NAME }} --capabilities CAPABILITY_NAMED_IAM --s3-bucket ${{ secrets.AWS_S3_BUCKET }} --role-arn ${{ secrets.AWS_ROLE_ARN }} --s3-prefix ${{ secrets.AWS_S3_PREFIX }} --no-confirm-changeset --tags "environment=production"