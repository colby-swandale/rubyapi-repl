name: Docker

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - '**.md'

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.json }}
    steps:
    - uses: actions/checkout@v3

    - id: set-matrix
      run: |
        payload=$(cat versions.json)
        payload="${payload//'%'/'%25'}"
        payload="${payload//$'\n'/'%0A'}"
        payload="${payload//$'\r'/'%0D'}"
        echo "::set-output name=json::$payload"
  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.aws-region-1.amazonaws.com:${{ matrix.engines.name }}
          build-args: JAVA_REQUIRED=${{ matrix.engines.version }},JAVA_REQUIRED=${{ matrix.engines.java }}